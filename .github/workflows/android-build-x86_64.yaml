name: 📲 Android 构建 x86_64 架构 APK

on:
  workflow_dispatch:
  push:  # 每次 push 到仓库时触发
    tags:
      - 'v*'  # 指定触发分支

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 确保有写入权限
      packages: write
    steps:
      - name: 🛠️ 检出代码仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: 🦀 设置 Rust 工具链 1.89.0
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.89.0
          override: true

      - name: 📦 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get update
          sudo apt-get install -y build-essential libc6-dev
          sudo apt-get install -y libc6-dev-armhf-cross gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
          sudo apt-get install -y clang llvm libclang-dev
          sudo apt-get install -y libc-dev
          sudo apt-get install -y protobuf-compiler

      - name: 🎯 配置 Rust 目标架构
        run: |
          rustup target add armv7-linux-androideabi
          rustup target add aarch64-linux-android
          rustup target add i686-linux-android
          rustup target add x86_64-linux-android

      - name: ☕ 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: 🤖 设置 Android SDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.2.12479018'
          cmake-version: '3.18.1'


      - name: 🐦 安装 Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --branch 3.29.3 $HOME/flutter --depth 1
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          export PATH="$HOME/flutter/bin:$PATH"
          chmod +x $HOME/flutter/bin/flutter
          flutter --version

      - name: 📚 安装 Flutter 依赖
        run: |
          flutter pub get

      - name: 🦀 安装 cargo-ndk
        run: |
          cargo install cargo-ndk
      - name: 🔐 设置签名配置
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          # 调试信息（不会显示敏感内容）
          echo "检查 key.properties 是否创建成功:"
          ls -la android/key.properties
          echo "检查 keystore 是否创建成功:"
          ls -la android/app/upload-keystore.jks

      - name: 🐦 设置 Flutter
        run: |
          flutter --version

      - name: 🛠️ 构建 x86_64 架构 APK
        run: |
          # 构建 x86_64 架构 APK
          flutter build apk --release --target-platform android-x64

      - name: 📤 上传 x86_64 架构 APK 到 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: astral-x86_64-apk
          path: build/app/outputs/flutter-apk/app-release.apk
